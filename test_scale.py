import numpy as np

half = [4.35846e-03, 6.55207e-05, 1.43381e-04, 2.69913e-04, 3.19334e-04, 5.11579e-04,
 5.90381e-04, 5.85712e-04, 9.80362e-04, 1.08628e-02, 4.34636e-02, 1.87212e-01,
 8.70826e-01, 1.20827e+00, 2.46073e+00, 1.64683e+00, 2.58559e+00, 2.39797e+00]

walker2d = [1.54294e-03, 3.26184e-07, 3.91901e-05, 9.62196e-05, 1.38893e-04, 1.52668e-03,
 7.94601e-05, 4.87924e-05, 8.46518e-04, 5.74620e-03, 1.07928e-02, 3.29266e-01,
 7.85330e-01, 1.16986e+00, 5.47106e+00, 7.29974e-01, 1.01483e+00, 5.51725e+00]

hopper = [3.80548e-05, 2.24220e-08, 8.25963e-08, 6.08142e-08, 1.70426e-07, 5.21197e-05,
 1.05505e-04, 5.92520e-04, 3.09305e-03, 1.71008e-03, 1.65432e-02, 1.56802e-01]

half = np.array(half)
walker2d = np.array(walker2d)
hopper = np.array(hopper)

for std in np.sqrt(half):
    print('{:.4f},'.format(std), end="")
print("")

for std in np.sqrt(walker2d):
    print('{:.4f},'.format(std), end="")
print("")

for std in np.sqrt(hopper):
    print('{:.4f},'.format(std), end="")
print("")

half_error = np.array([0.0660,0.0081,0.0120,0.0164,0.0179,0.0226,0.0243,0.0242,0.0313,0.1042,0.2085,0.4327,0.9332,1.0992,1.5687,1.2833,1.6080,1.5485])
half_true = np.array([2.2042, 0.0267,0.0483,0.2409,0.2429,0.2939,0.2280,0.2310,0.1762,0.6867,0.5823,1.2553,7.9273,7.7772,8.2787,6.0047,7.6029,5.6397])

walker2d_error = np.array([0.0393,0.0006,0.0063,0.0098,0.0118,0.0391,0.0089,0.0070,0.0291,0.0758,0.1039,0.5738,0.8862,1.0816,2.3390,0.8544,1.0074,2.3489])
walker2d_true = np.array([1.1466552, 0.0281,0.0521,0.0478,0.0716,0.0975,0.0553,0.0568,0.1018,0.2401,0.2233,2.2874,3.0197,2.4364,3.8227,3.1578,2.4878,3.8398,])

hopper_error = np.array([0.0062,0.0001,0.0003,0.0002,0.0004,0.0072,0.0103,0.0243,0.0556,0.0414,0.1286,0.3960])
hopper_true = np.array([1.052482,0.0397,0.0108,0.0925,0.0134,0.0608,0.2227,0.2087,0.3554,0.4259,0.4380,0.8584])

print('half')
print(half_error / half_true, np.mean(half_error / half_true))

print('walker2d')
print(walker2d_error / walker2d_true, np.mean(walker2d_error / walker2d_true))

print('hopper')
print(hopper_error / hopper_true, np.mean(hopper_error / hopper_true))